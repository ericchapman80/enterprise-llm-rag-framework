name: Post-Deployment API Tests

on:
  workflow_dispatch:
    inputs:
      api_url:
        description: 'API URL to test'
        required: true
        default: 'http://localhost:8000'
      test_modules:
        description: 'Test modules to run (comma-separated: core,chat,repo)'
        required: false
        default: 'core,chat,repo'
      parallel:
        description: 'Run tests in parallel'
        required: false
        default: 'true'
      thread_count:
        description: 'Number of threads for parallel testing'
        required: false
        default: '4'
  
  # Automatically run after deployment to specific environments
  deployment:
    environments: [production, staging]
    
  # Optionally run on schedule
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

jobs:
  verify-deployment:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/backend/requirements.txt
          pip install requests pytest
          
      - name: Verify deployment
        run: |
          python tests/post_deployment/verify_deployment.py --url ${{ github.event.inputs.api_url || 'http://localhost:8000' }} --retries 5 --delay 10
              
  run-tests:
    runs-on: ubuntu-latest
    needs: verify-deployment
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/backend/requirements.txt
          pip install requests pytest
          
      - name: Run post-deployment tests
        run: |
          export RAG_API_URL=${{ github.event.inputs.api_url || 'http://localhost:8000' }}
          export PARALLEL_TESTS=${{ github.event.inputs.thread_count || '4' }}
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          SEQUENTIAL=""
          if [ "${{ github.event.inputs.parallel }}" = "false" ]; then
            SEQUENTIAL="--sequential"
          fi
          
          MODULES=""
          if [ -n "${{ github.event.inputs.test_modules }}" ]; then
            MODULES="--modules ${{ github.event.inputs.test_modules }}"
          fi
          
          python tests/post_deployment/run_tests.py $SEQUENTIAL $MODULES
          
      - name: Upload test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: test-reports/
          retention-days: 14
